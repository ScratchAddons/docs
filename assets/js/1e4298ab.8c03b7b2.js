"use strict";(self.webpackChunkdocusaurus_2_classic_template=self.webpackChunkdocusaurus_2_classic_template||[]).push([[8155],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function d(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?d(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):d(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},d=Object.keys(e);for(a=0;a<d.length;a++)n=d[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(e);for(a=0;a<d.length;a++)n=d[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,d=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=u(n),h=r,k=c["".concat(i,".").concat(h)]||c[h]||p[h]||d;return n?a.createElement(k,o(o({ref:t},s),{},{components:n})):a.createElement(k,o({ref:t},s))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var d=n.length,o=new Array(d);o[0]=h;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var u=2;u<d;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7388:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>d,metadata:()=>l,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const d={title:"addon.tab.redux (Redux)",toc_title:"addon.tab.redux",h1_title:"`addon.tab.redux` (Redux)",description:"Scratch Addons supports getting and modifying Redux state!",weight:2,aliases:["/docs/developing/redux"]},o=void 0,l={unversionedId:"reference/addon-api/addon.tab/addon.tab.redux",id:"reference/addon-api/addon.tab/addon.tab.redux",title:"addon.tab.redux (Redux)",description:"Scratch Addons supports getting and modifying Redux state!",source:"@site/develop/reference/addon-api/addon.tab/addon.tab.redux.md",sourceDirName:"reference/addon-api/addon.tab",slug:"/reference/addon-api/addon.tab/addon.tab.redux",permalink:"/develop/reference/addon-api/addon.tab/addon.tab.redux",draft:!1,tags:[],version:"current",frontMatter:{title:"addon.tab.redux (Redux)",toc_title:"addon.tab.redux",h1_title:"`addon.tab.redux` (Redux)",description:"Scratch Addons supports getting and modifying Redux state!",weight:2,aliases:["/docs/developing/redux"]},sidebar:"tutorialSidebar",previous:{title:"addon.tab.appendToSharedSpace",permalink:"/develop/reference/addon-api/addon.tab/addon.tab.appendToSharedSpace"},next:{title:"addon.tab.traps (Traps)",permalink:"/develop/reference/addon-api/addon.tab/addon.tab.traps"}},i={},u=[{value:"Keep in mind",id:"keep-in-mind",level:2},{value:"Get Redux state",id:"get-redux-state",level:2},{value:"Wait for Redux state",id:"wait-for-redux-state",level:2},{value:"Events",id:"events",level:2},{value:"Dispatching event",id:"dispatching-event",level:2}],s={toc:u};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Scratch Addons supports getting and modifying Redux state!"),(0,r.kt)("h2",{id:"keep-in-mind"},"Keep in mind"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Redux is only available on scratch-www pages (the ones with the thicker navigation bar) and the editor."),(0,r.kt)("li",{parentName:"ul"},"Some extensions conflict with Scratch Addons' Redux feature. Do not use this when unnecessary."),(0,r.kt)("li",{parentName:"ul"},"We expect readers to have basic knowledge on Redux and Scratch's reducers.")),(0,r.kt)("h2",{id:"get-redux-state"},"Get Redux state"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"addon.tab.redux.state")," stores current Redux state. For example, to get message count: ",(0,r.kt)("inlineCode",{parentName:"p"},"addon.tab.redux.state.messageCount.messageCount")),(0,r.kt)("h2",{id:"wait-for-redux-state"},"Wait for Redux state"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"addon.tab.redux.waitForState()")," returns a Promise that will resolve when the Redux state meets the given condition."),(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Parameter"),(0,r.kt)("th",null,"Type"),(0,r.kt)("th",null,"Required"),(0,r.kt)("th",null,"Description")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"condition"),(0,r.kt)("td",null,(0,r.kt)("code",null,"Function")),(0,r.kt)("td",null,"Yes"),(0,r.kt)("td",null,"A function that takes Redux state as a parameter and returns whether to keep waiting or not.")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"options"),(0,r.kt)("td",null,(0,r.kt)("code",null,"Object")),(0,r.kt)("td",null,"No"),(0,r.kt)("td",null,(0,r.kt)("table",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Property"),(0,r.kt)("th",null,"Type"),(0,r.kt)("th",null,"Required"),(0,r.kt)("th",null,"Default"),(0,r.kt)("th",null,"Description")),(0,r.kt)("tr",null,(0,r.kt)("td",null,"actions"),(0,r.kt)("td",null,(0,r.kt)("code",null,"String | String[]")),(0,r.kt)("td",null,"No"),(0,r.kt)("td",null,"All possible values"),(0,r.kt)("td",null,"The action(s) to check for.")))))),(0,r.kt)("h2",{id:"events"},"Events"),(0,r.kt)("p",null,"You must first call ",(0,r.kt)("inlineCode",{parentName:"p"},"addon.tab.redux.initialize()")," for Scratch Addons to be able to listen for state changes."),(0,r.kt)("p",null,"Use ",(0,r.kt)("inlineCode",{parentName:"p"},'addon.tab.redux.addEventListener("statechanged", callback)')," to add event listeners for state changes. The callback can have one argument which is a CustomEvent with following attributes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"action"),": Dispatched action. See Redux docs for what it means."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"prev"),": Previous state."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"next"),": Next state.")),(0,r.kt)("h2",{id:"dispatching-event"},"Dispatching event"),(0,r.kt)("p",null,"You can dispatch events using ",(0,r.kt)("inlineCode",{parentName:"p"},"addon.tab.redux.dispatch(eventObject)"),". Event object must have ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," attribute and can have other attributes. For details on what to dispatch, read reducer codes on scratch-www, scratch-gui or scratch-paint:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/LLK/scratch-www/tree/develop/src/redux"},"https://github.com/LLK/scratch-www/tree/develop/src/redux")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/LLK/scratch-gui/tree/develop/src/reducers"},"https://github.com/LLK/scratch-gui/tree/develop/src/reducers")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/LLK/scratch-paint/tree/develop/src/reducers"},"https://github.com/LLK/scratch-paint/tree/develop/src/reducers"))))}c.isMDXComponent=!0}}]);